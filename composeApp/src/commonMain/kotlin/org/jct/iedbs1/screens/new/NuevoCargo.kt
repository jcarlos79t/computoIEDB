package org.jct.iedbs1.screens.new

import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.automirrored.filled.ArrowBack
import androidx.compose.material.icons.filled.ArrowBack
import androidx.compose.material.icons.filled.Person
import androidx.compose.material.icons.filled.Save
import androidx.compose.material3.CircularProgressIndicator
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.material3.TopAppBar
import androidx.compose.material3.TopAppBarDefaults
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.collectAsState
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import org.jct.iedbs1.models.Cargo
import org.jct.iedbs1.screens.home.HomeViewModel
import org.jct.iedbs1.screens.home.SaveState

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun NuevoCargo(viewModel: HomeViewModel, onNavigateBack: () -> Unit) {
    var cargoNombre by remember { mutableStateOf("") }
    val saveState by viewModel.saveState.collectAsState()

    LaunchedEffect(saveState) {
        if (saveState is SaveState.Success) {
            onNavigateBack()
        }
    }

    Scaffold(
        containerColor = MaterialTheme.colorScheme.background,
        topBar = {
            Header(
                viewModel = viewModel,
                onSave = {
                    val nuevoCargo = Cargo(
                        id = "", // Will be generated by ViewModel
                        cargo = cargoNombre
                    )
                    viewModel.guardarCargo(nuevoCargo)
                },
                onNavigateBack = onNavigateBack
            )
        }
    ) { innerPadding ->
        Box(modifier = Modifier.fillMaxSize().padding(innerPadding)) {
            Column(modifier = Modifier.padding(16.dp)) {
                OutlinedTextField(
                    value = cargoNombre,
                    onValueChange = { cargoNombre = it },
                    label = { Text("Nombre del Cargo") },
                    modifier = Modifier.fillMaxWidth(),
                    singleLine = true,
                    shape = RoundedCornerShape(16.dp)
                )
            }
            if (saveState is SaveState.Saving) {
                CircularProgressIndicator(modifier = Modifier.align(Alignment.Center))
            }
        }
    }
}

// --- Header ---
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun Header(viewModel: HomeViewModel, onSave: () -> Unit, onNavigateBack: () -> Unit) {
    TopAppBar(
        colors = TopAppBarDefaults.topAppBarColors(containerColor = MaterialTheme.colorScheme.primary),
        navigationIcon = {
            Icon(
                imageVector = Icons.AutoMirrored.Default.ArrowBack,
                contentDescription = "Logo",
                tint = MaterialTheme.colorScheme.onPrimary,
                modifier = Modifier
                    .padding(start = 10.dp)
                    .size(35.dp)
                    .clickable(onClick = onNavigateBack)
            )
        },
        title = {
            Column(
                //horizontalAlignment = Alignment.CenterHorizontally,
                modifier = Modifier.fillMaxWidth()
            ) {
                Text(
                    text = "ELECCIONES IEDB SANTIAGO I",
                    fontWeight = FontWeight.Bold,
                    color = MaterialTheme.colorScheme.onPrimary,
                    fontSize = 16.sp,
                    textAlign = TextAlign.Center,
                    lineHeight = 5.sp
                )
                Text(
                    text = "Nuevo cargo",
                    color = MaterialTheme.colorScheme.onPrimary,
                    fontSize = 14.sp,
                    textAlign = TextAlign.Start,
                    lineHeight = 10.sp
                )
            }
        },
        actions = {
            Icon(
                imageVector = Icons.Default.Save,
                contentDescription = "Guardar",
                tint = MaterialTheme.colorScheme.onPrimary,
                modifier = Modifier
                    .size(40.dp)
                    .padding(end = 12.dp)
                    .clickable(onClick = onSave)
            )
        }
    )
}
